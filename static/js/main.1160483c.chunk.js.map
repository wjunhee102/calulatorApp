{"version":3,"sources":["component/numberpad.js","store.js","component/func.js","component/operator.js","component/record.js","component/calc.js","App.js","index.js"],"names":["NumberPad","num","click","className","onClick","CalcEle","store","createStore","state","action","add","factor","reset","allReset","allRemove","type","newNumber","Object","assign","length","id","localStorage","setItem","newReset","newFactor","factorOn","operType","newAllReset","newAllRemove","removeItem","local","getItem","i","console","log","window","__REDUX_DEVTOOLS_EXTENSION__","actionCreators","FuncBtn","text","funcKinds","connect","dispatch","addClick","result","setRes","useState","on","setOn","funcClick","value","Number","join","useEffect","map","ele","idx","key","oper","OperBtn","name","onOff","factorClick","resetAction","res","count","res1","res2","Options","recordValue","setRV","selectChange","defaultValue","setValue","onChange","e","target","useInput","number","numberClick","x","Math","floor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1160483c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NumberPad({ num, click }) {\n    return (\n        <button \n        className={`num num${num}`} \n        onClick={()=>{\n            click(num);\n        }}>\n            <span>{num}</span>\n        </button>\n    )\n}\n\nexport default NumberPad;","import { createStore } from \"redux\";\n\nconst CalcEle = {\n    add : \"add\",\n    factor : \"factor\",\n    reset : \"reset\",\n    allReset : \"allReset\",\n    allRemove : \"allRemove\"\n}\n\nconst addNum = num => {\n    return {\n        type : CalcEle.add,\n        num\n    }\n}\n\nconst resetAction = reset => {\n    return {\n        type : CalcEle.reset,\n        reset\n    }\n}\n\nconst factorAction = (factorOn, operType) => {\n    return {\n        type : CalcEle.factor,\n        factorOn,\n        operType\n    }\n}\n\nconst allReset = (reset, factorOn, operType, num) => {\n    return {\n        type : CalcEle.allReset,\n        reset,\n        factorOn,\n        operType,\n        num\n    }\n}\n\nconst allRemove = (reset, factorOn, operType, num) => {\n    return {\n        type : CalcEle.allRemove,\n        reset,\n        factorOn,\n        operType,\n        num\n    }\n}\n\n\nconst reducer = (state, action) => {\n\n    const { add, factor, reset, allReset, allRemove} = CalcEle;\n\n    switch(action.type) {\n        case  add :\n            const newNumber = Object.assign({}, state[state.length -1],{\n                num : action.num, \n                id : state[state.length-1].id + 1\n            });\n            localStorage.setItem(\"num\", newNumber.num);\n            return [...state, newNumber]\n        case reset : \n            const newReset = Object.assign({}, state[state.length -1], {\n                reset : action.reset,\n                id : state[state.length-1].id + 1 \n            }); \n            return [...state, newReset]\n        case factor : \n            const newFactor = Object.assign({}, state[state.length -1], {\n                factorOn : action.factorOn, \n                operType : action.operType,\n                id : state[state.length-1].id + 1 \n            }); \n            return [...state, newFactor]\n        case allReset :\n            const newAllReset = Object.assign({}, state[state.length -1], {\n                reset : action.reset,\n                factorOn : action.factorOn,\n                operType : action.operType,\n                num : action.num,\n                id : state[state.length-1].id + 1\n            });\n            return [...state, newAllReset]\n        case allRemove : \n            const newAllRemove = Object.assign({}, state[state.length -1], {\n                reset : action.reset,\n                factorOn : action.factorOn,\n                operType : action.operType,\n                num : action.num,\n                id : state[state.length-1].id + 1\n            });\n            localStorage.removeItem(\"num\");\n            return [newAllRemove]\n        default :\n            const local = localStorage.getItem(\"num\");\n            let i = 0;\n            console.log(typeof(i))\n            if(local) i = local\n            state = [{\n                num : i,\n                id : 1,\n                reset : false,\n                factorOn : false,\n                operType : null\n            }]\n            return state;\n    }\n}\n\nconst store = createStore(reducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport const actionCreators = {\n    addNum,\n    factorAction,\n    resetAction,\n    allReset,\n    allRemove\n}\n\nexport default store;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store\";\n\nfunction FuncBtn({click, type, text}) {\n    return (\n        <button \n            type=\"button\"\n            className={`funcBtn ${type}`} \n            onClick={()=>(\n                click(type)\n            )}\n        >\n            <span>{text}</span>\n        </button>\n    )\n}\n\nconst funcKinds = [\n    {\n        type : \"trans\",\n        text : \"+/-\"\n    },\n    {\n        type : \"per\",\n        text : \"%\"\n    }\n]\n\nfunction Func({ result, setRes, addClick, state, allReset }) {\n    const [ on, setOn ] = useState(\"AC\");\n\n    const funcClick = type => {\n\n        let value = Number(result.join(\"\"));\n\n        switch(type) {\n            case \"trans\" :\n                if(!value) return\n                setRes([-value]);\n                addClick(-value);\n                break;\n            case \"per\" :\n                if(!value) return\n                setRes([value/100])\n                addClick(value/100);\n                break;\n            default :\n                setRes([\"오류\"]);\n        }\n\n        \n    }\n\n    const cancleBtn = () => {\n        console.log(result);\n        setRes([]);\n        if(!result[0]) {\n            allReset(false , false, null, 0);\n        }\n    }\n\n    useEffect(()=>{\n        if(result[0] || state.num || state.operType) {\n            setOn(\"C\")\n        } else {\n            setOn(\"AC\")\n        }\n    },[state.num, result, state.operType])\n\n    return (\n        <div className=\"func\">\n            <button \n                type=\"button\"\n                className={`funcBtn cancle`} \n                onClick={cancleBtn}>\n                <span>{on}</span>\n            </button>\n            \n            {funcKinds.map((ele, idx) =>(\n                <FuncBtn \n                    type={ele.type}\n                    click={funcClick}\n                    text={ele.text}\n                    key={idx}\n                />\n            ))}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        state : state[state.length -1]\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addClick : num => dispatch(actionCreators.addNum(num)),\n        allReset : (reset, factorOn, operType, num) => dispatch(actionCreators.allReset(reset, factorOn, operType, num))\n    } \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Func);","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store\";\n\nconst oper = [\n    {\n        type : \"division\",\n        text : \"/\"\n    },\n    {\n        type : \"multiply\",\n        text : \"X\"\n    },\n    {\n        type : \"minus\",\n        text : \"ㅡ\"\n    },\n    {\n        type : \"plus\",\n        text : \"+\"\n    }, \n    {\n        type : \"count\",\n        text : \"=\"\n    }\n]\n\nfunction OperBtn({name, text, click, onOff}) {\n    const [ on, setOn ] = useState(\"\");\n\n    useEffect(()=> {\n        if(name === onOff) {\n            setOn(\"on\")\n        } else {\n            setOn(\"\")\n        }      \n    },[onOff, name])\n\n    return (\n        <button\n            onClick={()=>{\n                click(name);\n            }}\n            type=\"button\" \n            className={`oper ${name} ${on}`}>\n            <span>{text}</span>\n        </button>\n    )\n}\n\nfunction Operator({factorClick, state, resetAction, res, setRes, addClick}) {\n\n    const count = type =>{\n        let factorOn, operType;\n        resetAction(true);\n\n        switch(type) {\n            case \"plus\" :\n                operType = type;\n                factorOn = true;\n                break;\n            case \"minus\" :\n                operType = type;\n                factorOn = true;\n                break;\n            case \"multiply\" :\n                operType = type;\n                factorOn = true;\n                break;\n            case \"division\" :\n                operType = type;\n                factorOn = true;\n                break;\n            default :\n                operType = null;\n                factorOn = false;\n        }\n        \n        if(state.operType && !state.reset) {\n            let res1 = state.num;\n            let res2 = Number(res.join(\"\"));\n            let value;\n            switch(state.operType) {\n                case \"plus\" : \n                    value = res1 + res2;\n                    break;\n                case \"minus\" :\n                    value = res1 - res2;\n                    break;\n                case \"multiply\" :\n                    value = res1 * res2;\n                    break;\n                case \"division\" :\n                    value = res1 / res2;\n                    break;\n                default :\n                    value = res2;\n                    return\n            }\n            if(operType){\n                factorOn = false;\n            } \n                setRes([value]);\n                addClick(value);\n        } else {\n            addClick(Number(res.join(\"\")));\n        }\n        factorClick(factorOn, operType);\n    }\n\n    return (\n        <div className=\"operator\">\n            {oper.map((ele, idx)=>(\n                <OperBtn \n                    onOff={state.operType}\n                    name={ele.type}\n                    text={ele.text}\n                    key={idx}\n                    click={count}\n                />\n            ))}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        state : state[state.length -1]\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        factorClick: (factorOn, operType) => dispatch(actionCreators.factorAction(factorOn, operType)),\n        // resetAction: reset => dispath(actionCreators.resetAction(reset))\n        resetAction: reset => dispatch({type : \"reset\",reset : reset}),\n        addClick : num => dispatch(actionCreators.addNum(num))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Operator);","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store\";\n\nfunction Options({value}){\n    console.log(value);\n    return (\n        <option value={value}>\n            {value}\n        </option>\n    )\n}\n\nfunction useInput(defaultValue) {\n    const [ value, setValue ] = useState(defaultValue);\n\n    const onChange = e => {\n        const {\n            target : {value}\n        } = e;\n        setValue(value);\n    };\n    return { value, onChange }\n}\n\nfunction Record({state, allReset, setRes, allRemove}) {\n    const [ recordValue, setRV ] = useState([0]);\n\n    const selectChange = useInput(state);\n\n    //확인할 것\n    useEffect(()=>{\n        const rValue = recordValue[recordValue.length -1];\n        if(rValue !== state) {\n            if(!recordValue[0]) {\n                setRV([state])\n            } else {\n                setRV([...recordValue, state])\n            }\n        } \n    },[state])\n\n    const timeMachine = ()=> {\n        if(selectChange.value !== state) {\n            if(selectChange.value === 0) {\n                allReset(false, false, null, selectChange.value);\n                setRes([]);\n            } else {\n                allReset(false, false, null, selectChange.value);\n                setRes([selectChange.value]);\n            }\n        }\n    }\n    const allRemoveAction = ()=> {\n        allRemove(false, false, null, 0);\n        setRV([state]);\n    }\n\n    return (\n        <div className=\"record\">\n            <select {...selectChange}>\n                <option value={0}>계산 기록</option>\n                {recordValue[0] ? (\n                    recordValue.map((ele, idx)=>(\n                        <Options \n                        value={ele}\n                        key={idx}\n                    />\n                    ))\n                ):(null)}\n            </select>\n            <button type=\"button\" onClick={timeMachine}>값 불러오기</button>\n            <button type=\"button\" onClick={allRemoveAction}>기록 지우기</button>\n            <div className=\"state\">{state}</div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return { state : state[state.length - 1].num\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        allReset : (reset, factorOn, operType, num) => dispatch(actionCreators.allReset(reset, factorOn, operType, num)),\n        allRemove : (reset, factorOn, operType, num) => dispatch(actionCreators.allRemove(reset, factorOn, operType, num))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Record);","import React, { useState } from \"react\";\nimport NumberPad from \"./numberpad\";\nimport Func from \"./func\";\nimport Operator from \"./operator\";\nimport Record from \"./record\";\nimport './calc.css';\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store\";\n\nconst number = [ 9, 8, 7, 6, 5, 4, 3, 2, 1];\n\nfunction Calc({num, resetAction}) {\n    const [ res, setRes ] = useState([]);\n\n    console.log(num);\n\n    const numberClick = (x)=>{\n        if(res && num[num.length -1].reset === false) {\n            setRes([...res, x])\n        } else {\n            setRes([x]);\n            resetAction(false);\n        }\n        \n    }   \n\n    const dotClick = ()=> {\n        let value = Number(res.join(\"\"));\n        let valueFloor = Math.floor(value);\n        if(value !== valueFloor || res[res.length-1] === \".\") return\n        setRes([...res, \".\"]);\n    }\n\n\n    return (\n        <article className=\"calc\">\n\n            <Record setRes={setRes}/>\n\n            <div className=\"resWindow\">{res[0]?(res.map(ele=>(ele))):(0)}</div>\n            <div className=\"calcBtn\">\n                <div className=\"numberBox\">\n                    <Func \n                        result={res}\n                        setRes={setRes}\n                    />\n                    <div className=\"number\">\n                        {number.map(ele => (\n                            <NumberPad\n                                num={ele}\n                                click={numberClick}\n                                key={ele}\n                            />\n                        ))}\n                        <button \n                            className=\"num numDot\"\n                            onClick={dotClick}>\n                            <span>.</span>\n                        </button>\n                        <button \n                            className=\"num num0\"\n                            onClick={()=>{\n                                numberClick(0);\n                        }}>\n                            <span>0</span>\n                        </button>\n                    </div>\n                </div>\n                <Operator \n                    res={res}\n                    setRes={setRes} />\n            </div>\n \n        </article>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return { num : state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        resetAction : reset => dispatch(actionCreators.resetAction(reset))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calc);","import React from 'react';\nimport Calc from './component/calc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}