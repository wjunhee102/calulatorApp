{"version":3,"sources":["component/numberpad.js","store.js","component/func.js","component/operator.js","component/record.js","component/calc.js","App.js","index.js"],"names":["NumberPad","num","click","className","onClick","CalcEle","store","createStore","state","action","add","factor","reset","allReset","allRemove","type","newNumber","Object","assign","length","id","localStorage","setItem","newReset","newFactor","factorOn","operType","newAllReset","newAllRemove","removeItem","local","getItem","i","window","__REDUX_DEVTOOLS_EXTENSION__","actionCreators","FuncBtn","text","funcKinds","connect","dispatch","addClick","result","setRes","useState","on","setOn","funcClick","value","Number","join","useEffect","map","ele","idx","key","oper","OperBtn","name","onOff","factorClick","resetAction","res","count","res1","res2","Options","recordValue","setRV","selectChange","defaultValue","setValue","onChange","e","target","useInput","number","numberClick","x","Math","floor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28e338b2.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NumberPad({ num, click }) {\n    return (\n        <button \n        className={`num num${num}`} \n        onClick={()=>{\n            click(num);\n        }}>\n            <span>{num}</span>\n        </button>\n    )\n}\n\nexport default NumberPad;","import { createStore } from \"redux\";\n\nconst CalcEle = {\n    add : \"add\",\n    factor : \"factor\",\n    reset : \"reset\",\n    allReset : \"allReset\",\n    allRemove : \"allRemove\"\n}\n\nconst addNum = num => {\n    return {\n        type : CalcEle.add,\n        num\n    }\n}\n\nconst resetAction = reset => {\n    return {\n        type : CalcEle.reset,\n        reset\n    }\n}\n\nconst factorAction = (factorOn, operType) => {\n    return {\n        type : CalcEle.factor,\n        factorOn,\n        operType\n    }\n}\n\nconst allReset = (reset, factorOn, operType, num) => {\n    return {\n        type : CalcEle.allReset,\n        reset,\n        factorOn,\n        operType,\n        num\n    }\n}\n\nconst allRemove = (reset, factorOn, operType, num) => {\n    return {\n        type : CalcEle.allRemove,\n        reset,\n        factorOn,\n        operType,\n        num\n    }\n}\n\n\nconst reducer = (state, action) => {\n\n    const { add, factor, reset, allReset, allRemove} = CalcEle;\n\n    switch(action.type) {\n        case  add :\n            const newNumber = Object.assign({}, state[state.length -1],{\n                num : action.num, \n                id : state[state.length-1].id + 1\n            });\n            localStorage.setItem(\"num\", newNumber.num);\n            return [...state, newNumber]\n        case reset : \n            const newReset = Object.assign({}, state[state.length -1], {\n                reset : action.reset,\n                id : state[state.length-1].id + 1 \n            }); \n            return [...state, newReset]\n        case factor : \n            const newFactor = Object.assign({}, state[state.length -1], {\n                factorOn : action.factorOn, \n                operType : action.operType,\n                id : state[state.length-1].id + 1 \n            }); \n            return [...state, newFactor]\n        case allReset :\n            const newAllReset = Object.assign({}, state[state.length -1], {\n                reset : action.reset,\n                factorOn : action.factorOn,\n                operType : action.operType,\n                num : action.num,\n                id : state[state.length-1].id + 1\n            });\n            return [...state, newAllReset]\n        case allRemove : \n            const newAllRemove = Object.assign({}, state[state.length -1], {\n                reset : action.reset,\n                factorOn : action.factorOn,\n                operType : action.operType,\n                num : action.num,\n                id : state[state.length-1].id + 1\n            });\n            localStorage.removeItem(\"num\");\n            return [newAllRemove]\n        default :\n            const local = localStorage.getItem(\"num\");\n            let i = 0;\n            if(local) i = local\n            state = [{\n                num : i,\n                id : 1,\n                reset : false,\n                factorOn : false,\n                operType : null\n            }]\n            return state;\n    }\n}\n\nconst store = createStore(reducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport const actionCreators = {\n    addNum,\n    factorAction,\n    resetAction,\n    allReset,\n    allRemove\n}\n\nexport default store;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store\";\n\nfunction FuncBtn({click, type, text}) {\n    return (\n        <button \n            type=\"button\"\n            className={`funcBtn ${type}`} \n            onClick={()=>(\n                click(type)\n            )}\n        >\n            <span>{text}</span>\n        </button>\n    )\n}\n\nconst funcKinds = [\n    {\n        type : \"trans\",\n        text : \"+/-\"\n    },\n    {\n        type : \"per\",\n        text : \"%\"\n    }\n]\n\nfunction Func({ result, setRes, addClick, state, allReset }) {\n    const [ on, setOn ] = useState(\"AC\");\n\n    const funcClick = type => {\n\n        let value = Number(result.join(\"\"));\n\n        switch(type) {\n            case \"trans\" :\n                if(!value) return\n                setRes([-value]);\n                addClick(-value);\n                break;\n            case \"per\" :\n                if(!value) return\n                setRes([value/100])\n                addClick(value/100);\n                break;\n            default :\n                setRes([\"오류\"]);\n        }\n\n        \n    }\n\n    const cancleBtn = () => {\n        setRes([]);\n        if(!result[0]) {\n            allReset(false , false, null, 0);\n        }\n    }\n\n    useEffect(()=>{\n        if(result[0] || state.num || state.operType) {\n            setOn(\"C\")\n        } else {\n            setOn(\"AC\")\n        }\n    },[state.num, result, state.operType])\n\n    return (\n        <div className=\"func\">\n            <button \n                type=\"button\"\n                className={`funcBtn cancle`} \n                onClick={cancleBtn}>\n                <span>{on}</span>\n            </button>\n            \n            {funcKinds.map((ele, idx) =>(\n                <FuncBtn \n                    type={ele.type}\n                    click={funcClick}\n                    text={ele.text}\n                    key={idx}\n                />\n            ))}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        state : state[state.length -1]\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addClick : num => dispatch(actionCreators.addNum(num)),\n        allReset : (reset, factorOn, operType, num) => dispatch(actionCreators.allReset(reset, factorOn, operType, num))\n    } \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Func);","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store\";\n\nconst oper = [\n    {\n        type : \"division\",\n        text : \"/\"\n    },\n    {\n        type : \"multiply\",\n        text : \"X\"\n    },\n    {\n        type : \"minus\",\n        text : \"ㅡ\"\n    },\n    {\n        type : \"plus\",\n        text : \"+\"\n    }, \n    {\n        type : \"count\",\n        text : \"=\"\n    }\n]\n\nfunction OperBtn({name, text, click, onOff}) {\n    const [ on, setOn ] = useState(\"\");\n\n    useEffect(()=> {\n        if(name === onOff) {\n            setOn(\"on\")\n        } else {\n            setOn(\"\")\n        }      \n    },[onOff, name])\n\n    return (\n        <button\n            onClick={()=>{\n                click(name);\n            }}\n            type=\"button\" \n            className={`oper ${name} ${on}`}>\n            <span>{text}</span>\n        </button>\n    )\n}\n\nfunction Operator({factorClick, state, resetAction, res, setRes, addClick}) {\n\n    const count = type =>{\n        let factorOn, operType;\n        resetAction(true);\n\n        switch(type) {\n            case \"plus\" :\n                operType = type;\n                factorOn = true;\n                break;\n            case \"minus\" :\n                operType = type;\n                factorOn = true;\n                break;\n            case \"multiply\" :\n                operType = type;\n                factorOn = true;\n                break;\n            case \"division\" :\n                operType = type;\n                factorOn = true;\n                break;\n            default :\n                operType = null;\n                factorOn = false;\n        }\n        \n        if(state.operType && !state.reset) {\n            let res1 = state.num;\n            let res2 = Number(res.join(\"\"));\n            let value;\n            switch(state.operType) {\n                case \"plus\" : \n                    value = res1 + res2;\n                    break;\n                case \"minus\" :\n                    value = res1 - res2;\n                    break;\n                case \"multiply\" :\n                    value = res1 * res2;\n                    break;\n                case \"division\" :\n                    value = res1 / res2;\n                    break;\n                default :\n                    value = res2;\n                    return\n            }\n            if(operType){\n                factorOn = false;\n            } \n                setRes([value]);\n                addClick(value);\n        } else {\n            addClick(Number(res.join(\"\")));\n        }\n        factorClick(factorOn, operType);\n    }\n\n    return (\n        <div className=\"operator\">\n            {oper.map((ele, idx)=>(\n                <OperBtn \n                    onOff={state.operType}\n                    name={ele.type}\n                    text={ele.text}\n                    key={idx}\n                    click={count}\n                />\n            ))}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        state : state[state.length -1]\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        factorClick: (factorOn, operType) => dispatch(actionCreators.factorAction(factorOn, operType)),\n        // resetAction: reset => dispath(actionCreators.resetAction(reset))\n        resetAction: reset => dispatch({type : \"reset\",reset : reset}),\n        addClick : num => dispatch(actionCreators.addNum(num))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Operator);","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store\";\n\nfunction Options({value}){\n    return (\n        <option value={value}>\n            {value}\n        </option>\n    )\n}\n\nfunction useInput(defaultValue) {\n    const [ value, setValue ] = useState(defaultValue);\n\n    const onChange = e => {\n        const {\n            target : {value}\n        } = e;\n        setValue(value);\n    };\n    return { value, onChange }\n}\n\nfunction Record({state, allReset, setRes, allRemove}) {\n    const [ recordValue, setRV ] = useState([0]);\n\n    const selectChange = useInput(state);\n\n    //확인할 것\n    useEffect(()=>{\n        const rValue = recordValue[recordValue.length -1];\n        if(rValue !== state) {\n            if(!recordValue[0]) {\n                setRV([state])\n            } else {\n                setRV([...recordValue, state])\n            }\n        } \n    },[state])\n\n    const timeMachine = ()=> {\n        if(selectChange.value !== state) {\n            if(selectChange.value === 0) {\n                allReset(false, false, null, selectChange.value);\n                setRes([]);\n            } else {\n                allReset(false, false, null, selectChange.value);\n                setRes([selectChange.value]);\n            }\n        }\n    }\n    const allRemoveAction = ()=> {\n        allRemove(false, false, null, 0);\n        setRV([state]);\n    }\n\n    return (\n        <div className=\"record\">\n            <select {...selectChange}>\n                <option value={0}>계산 기록</option>\n                {recordValue[0] ? (\n                    recordValue.map((ele, idx)=>(\n                        <Options \n                        value={ele}\n                        key={idx}\n                    />\n                    ))\n                ):(null)}\n            </select>\n            <button type=\"button\" onClick={timeMachine}>값 불러오기</button>\n            <button type=\"button\" onClick={allRemoveAction}>기록 지우기</button>\n            <div className=\"state\">{state}</div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return { state : state[state.length - 1].num\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        allReset : (reset, factorOn, operType, num) => dispatch(actionCreators.allReset(reset, factorOn, operType, num)),\n        allRemove : (reset, factorOn, operType, num) => dispatch(actionCreators.allRemove(reset, factorOn, operType, num))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Record);","import React, { useState } from \"react\";\nimport NumberPad from \"./numberpad\";\nimport Func from \"./func\";\nimport Operator from \"./operator\";\nimport Record from \"./record\";\nimport './calc.css';\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store\";\n\nconst number = [ 9, 8, 7, 6, 5, 4, 3, 2, 1];\n\nfunction Calc({num, resetAction}) {\n    const [ res, setRes ] = useState([]);\n\n    const numberClick = (x)=>{\n        if(res && num[num.length -1].reset === false) {\n            setRes([...res, x])\n        } else {\n            setRes([x]);\n            resetAction(false);\n        }\n        \n    }   \n\n    const dotClick = ()=> {\n        let value = Number(res.join(\"\"));\n        let valueFloor = Math.floor(value);\n        if(value !== valueFloor || res[res.length-1] === \".\") return\n        setRes([...res, \".\"]);\n    }\n\n\n    return (\n        <article className=\"calc\">\n\n            <Record setRes={setRes}/>\n\n            <div className=\"resWindow\">{res[0]?(res.map(ele=>(ele))):(0)}</div>\n            <div className=\"calcBtn\">\n                <div className=\"numberBox\">\n                    <Func \n                        result={res}\n                        setRes={setRes}\n                    />\n                    <div className=\"number\">\n                        {number.map(ele => (\n                            <NumberPad\n                                num={ele}\n                                click={numberClick}\n                                key={ele}\n                            />\n                        ))}\n                        <button \n                            className=\"num numDot\"\n                            onClick={dotClick}>\n                            <span>.</span>\n                        </button>\n                        <button \n                            className=\"num num0\"\n                            onClick={()=>{\n                                numberClick(0);\n                        }}>\n                            <span>0</span>\n                        </button>\n                    </div>\n                </div>\n                <Operator \n                    res={res}\n                    setRes={setRes} />\n            </div>\n \n        </article>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return { num : state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        resetAction : reset => dispatch(actionCreators.resetAction(reset))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calc);","import React from 'react';\nimport Calc from './component/calc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}